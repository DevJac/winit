name: CI

on:
  pull_request:
  push:
    branches: [master]

jobs:
  tests:
    name: Test ${{ matrix.toolchain }} ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly, '1.65.0']
        platform:
          # Note: Make sure that we test all the `docs.rs` targets defined in Cargo.toml!
          - { name: 'Windows 64bit MSVC', target: x86_64-pc-windows-msvc,   os: windows-latest,  }
        include:
          # Android is tested on stable-3
          - toolchain: '1.69.0'
            platform: { name: 'Android', target: aarch64-linux-android, os: ubuntu-latest, options: '--package=winit --features=android-native-activity' }
          - toolchain: 'stable'
            platform: { name: 'Android', target: aarch64-linux-android, os: ubuntu-latest, options: '--package=winit --features=android-native-activity' }
          - toolchain: 'nightly'
            platform: { name: 'Android', target: aarch64-linux-android, os: ubuntu-latest, options: '--package=winit --features=android-native-activity' }


    env:
      # Set more verbose terminal output
      CARGO_TERM_VERBOSE: true
      RUST_BACKTRACE: 1

      # Faster compilation and error on warnings
      RUSTFLAGS: '--codegen=debuginfo=0 --deny=warnings'
      RUSTDOCFLAGS: '--deny=warnings'

      OPTIONS: --target=${{ matrix.platform.target }} ${{ matrix.platform.options }}

    steps:
    - uses: actions/checkout@v3

    - name: Restore cache of cargo folder
      # We use `restore` and later `save`, so that we can create the key after
      # the cache has been downloaded.
      #
      # This could be avoided if we added Cargo.lock to the repository.
      uses: actions/cache/restore@v3
      with:
        # https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-${{ matrix.toolchain }}-${{ matrix.platform.name }}-never-intended-to-be-found
        restore-keys: cargo-${{ matrix.toolchain }}-${{ matrix.platform.name }}

    - name: Generate lockfile
      # Also updates the crates.io index
      run: cargo generate-lockfile

    - name: Install GCC Multilib
      if: (matrix.platform.os == 'ubuntu-latest') && contains(matrix.platform.target, 'i686')
      run: sudo apt-get update && sudo apt-get install gcc-multilib

    - name: Install xbuild
      uses: taiki-e/install-action@v2
      if: contains(matrix.platform.target, 'android') || contains(matrix.platform.target, 'ios')
      with:
        tool: xbuild@0.2.0

    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.toolchain }}${{ matrix.platform.host }}
        targets: ${{ matrix.platform.target }}
        components: clippy

    - name: Install LLVM tools for Android
      if: contains(matrix.platform.target, 'android')
      run: sudo apt-get update && sudo apt-get install clang lld lldb llvm adb gradle

    - name: Check documentation
      run: cargo doc --no-deps $OPTIONS --document-private-items

    - name: Build crate 
      run: cargo build $OPTIONS

    - name: Build and package crate for Android
      if: contains(matrix.platform.target, 'android')
      run: x doctor && x build -p android-xbuild-target --platform android --arch arm64

    - name: Build and package crate for iOS
      if: contains(matrix.platform.target, 'ios')
      run: x build -p ios-xbuild-target --platform ios --arch arm64

    - name: Build tests
      if: >
        !contains(matrix.platform.target, 'redox') &&
        !contains(matrix.platform.target, 'android') &&
        matrix.toolchain != '1.65.0'
      run: cargo test --no-run $OPTIONS

    - name: Run tests
      if: >
        !contains(matrix.platform.target, 'android') &&
        !contains(matrix.platform.target, 'ios') &&
        !contains(matrix.platform.target, 'wasm32') &&
        !contains(matrix.platform.target, 'redox') &&
        matrix.toolchain != '1.65.0'
      run: cargo test $OPTIONS

    - name: Lint with clippy
      if: (matrix.toolchain == 'stable') && !contains(matrix.platform.options, '--no-default-features')
      run: cargo clippy --all-targets $OPTIONS -- -Dwarnings

    - name: Build tests with serde enabled
      if: >
        !contains(matrix.platform.target, 'redox') &&
        !contains(matrix.platform.target, 'android') &&
        matrix.toolchain != '1.65.0'
      run: cargo test --no-run $OPTIONS --features serde

    - name: Run tests with serde enabled
      if: >
        !contains(matrix.platform.target, 'android') &&
        !contains(matrix.platform.target, 'ios') &&
        !contains(matrix.platform.target, 'wasm32') &&
        !contains(matrix.platform.target, 'redox') &&
        matrix.toolchain != '1.65.0'
      run: cargo test $OPTIONS --features serde

    # See restore step above
    - name: Save cache of cargo folder
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-${{ matrix.toolchain }}-${{ matrix.platform.name }}-${{ hashFiles('Cargo.lock') }}
